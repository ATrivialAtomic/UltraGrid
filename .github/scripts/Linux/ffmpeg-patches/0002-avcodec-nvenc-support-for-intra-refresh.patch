From 1bda9849043d8e44ad68d9933f4cdf9810b420ba Mon Sep 17 00:00:00 2001
From: Martin Pulec <martin.pulec@cesnet.cz>
Date: Fri, 16 Apr 2021 08:44:24 +0200
Subject: [PATCH] avcodec/nvenc: support for intra refresh

---
 libavcodec/nvenc.c      | 24 +++++++++++++++++++++---
 libavcodec/nvenc.h      |  1 +
 libavcodec/nvenc_h264.c |  1 +
 libavcodec/nvenc_hevc.c |  1 +
 4 files changed, 24 insertions(+), 3 deletions(-)

diff --git a/libavcodec/nvenc.c b/libavcodec/nvenc.c
index ee046b9cef..2003943d0d 100644
--- a/libavcodec/nvenc.c
+++ b/libavcodec/nvenc.c
@@ -524,6 +524,12 @@ static int nvenc_check_capabilities(AVCodecContext *avctx)
     }
 #endif
 
+    ret = nvenc_check_cap(avctx, NV_ENC_CAPS_SUPPORT_INTRA_REFRESH);
+    if(ctx->intra_refresh && ret <= 0) {
+        av_log(avctx, AV_LOG_WARNING, "Intra refresh not supported\n");
+        return AVERROR(ENOSYS);
+    }
+
     ctx->support_dyn_bitrate = nvenc_check_cap(avctx, NV_ENC_CAPS_SUPPORT_DYN_BITRATE_CHANGE);
 
     return 0;
@@ -1063,6 +1069,12 @@ static av_cold int nvenc_setup_h264_config(AVCodecContext *avctx)
     h264->sliceMode = 3;
     h264->sliceModeData = 8;
 
+    if (ctx->intra_refresh) {
+            h264->enableIntraRefresh = 1;
+            h264->intraRefreshPeriod = avctx->gop_size;
+            h264->intraRefreshCnt = avctx->gop_size - 1;
+    }
+
     h264->disableSPSPPS = (avctx->flags & AV_CODEC_FLAG_GLOBAL_HEADER) ? 1 : 0;
     h264->repeatSPSPPS  = (avctx->flags & AV_CODEC_FLAG_GLOBAL_HEADER) ? 0 : 1;
     h264->outputAUD     = ctx->aud;
@@ -1072,7 +1084,7 @@ static av_cold int nvenc_setup_h264_config(AVCodecContext *avctx)
         h264->maxNumRefFrames = ctx->dpb_size;
     }
     if (avctx->gop_size >= 0) {
-        h264->idrPeriod = cc->gopLength;
+        h264->idrPeriod = avctx->gop_size;
     }
 
     if (IS_CBR(cc->rcParams.rateControlMode)) {
@@ -1160,6 +1172,12 @@ static av_cold int nvenc_setup_hevc_config(AVCodecContext *avctx)
     hevc->sliceMode = 3;
     hevc->sliceModeData = 1;
 
+    if (ctx->intra_refresh) {
+            hevc->enableIntraRefresh = 1;
+            hevc->intraRefreshPeriod = avctx->gop_size;
+            hevc->intraRefreshCnt = avctx->gop_size - 1;
+    }
+
     hevc->disableSPSPPS = (avctx->flags & AV_CODEC_FLAG_GLOBAL_HEADER) ? 1 : 0;
     hevc->repeatSPSPPS  = (avctx->flags & AV_CODEC_FLAG_GLOBAL_HEADER) ? 0 : 1;
     hevc->outputAUD     = ctx->aud;
@@ -1169,7 +1187,7 @@ static av_cold int nvenc_setup_hevc_config(AVCodecContext *avctx)
         hevc->maxNumRefFramesInDPB = ctx->dpb_size;
     }
     if (avctx->gop_size >= 0) {
-        hevc->idrPeriod = cc->gopLength;
+        hevc->idrPeriod = avctx->gop_size;
     }
 
     if (IS_CBR(cc->rcParams.rateControlMode)) {
@@ -1348,7 +1366,7 @@ static av_cold int nvenc_setup_encoder(AVCodecContext *avctx)
             ctx->encode_config.frameIntervalP = avctx->max_b_frames + 1;
         }
 
-        ctx->encode_config.gopLength = avctx->gop_size;
+        ctx->encode_config.gopLength = ctx->intra_refresh ? NVENC_INFINITE_GOPLENGTH : avctx->gop_size;
     } else if (avctx->gop_size == 0) {
         ctx->encode_config.frameIntervalP = 0;
         ctx->encode_config.gopLength = 1;
diff --git a/libavcodec/nvenc.h b/libavcodec/nvenc.h
index 85d3a33601..1e275884ad 100644
--- a/libavcodec/nvenc.h
+++ b/libavcodec/nvenc.h
@@ -223,6 +223,7 @@ typedef struct NvencContext
     int multipass;
     int ldkfs;
     int extra_sei;
+    int intra_refresh;
 } NvencContext;
 
 int ff_nvenc_encode_init(AVCodecContext *avctx);
diff --git a/libavcodec/nvenc_h264.c b/libavcodec/nvenc_h264.c
index c7af7fa682..31bb32785a 100644
--- a/libavcodec/nvenc_h264.c
+++ b/libavcodec/nvenc_h264.c
@@ -184,6 +184,7 @@ static const AVOption options[] = {
 #endif
     { "extra_sei",    "Pass on extra SEI data (e.g. a53 cc) to be included in the bitstream",
                                                             OFFSET(extra_sei),    AV_OPT_TYPE_BOOL,  { .i64 = 1 }, 0, 1, VE },
+    { "intra-refresh", "Use Periodic Intra Refresh instead of IDR frames.",OFFSET(intra_refresh),AV_OPT_TYPE_BOOL,   { .i64 = 0 }, 0, 1, VE },
     { NULL }
 };
 
diff --git a/libavcodec/nvenc_hevc.c b/libavcodec/nvenc_hevc.c
index c85a317518..b7563f75f7 100644
--- a/libavcodec/nvenc_hevc.c
+++ b/libavcodec/nvenc_hevc.c
@@ -165,6 +165,7 @@ static const AVOption options[] = {
 #endif
     { "extra_sei",    "Pass on extra SEI data (e.g. a53 cc) to be included in the bitstream",
                                                             OFFSET(extra_sei),    AV_OPT_TYPE_BOOL,  { .i64 = 1 }, 0, 1, VE },
+    { "intra-refresh", "Use Periodic Intra Refresh instead of IDR frames.",OFFSET(intra_refresh),AV_OPT_TYPE_BOOL,   { .i64 = 0 }, 0, 1, VE },
     { NULL }
 };
 
-- 
2.25.1

